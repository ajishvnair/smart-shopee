{"version":3,"sources":["images/login.svg","common/loader/ant-loader/index.js","common/route/AppRoute.js","components/template/header/index.js","components/authentication/login/index.js","App.js","serviceWorker.js","index.js","common/helper/commonMethods.js","common/http/index.js"],"names":["module","exports","className","Category","lazy","Products","Location","Orders","AppRoute","fallback","exact","path","to","component","withRouter","props","history","location","getSelectedMenu","useCallback","pathName","paths","split","filter","a","length","theme","selectedKeys","pathname","mode","Item","key","onClick","push","setAuthenticated","useState","showAlert","setShowAlert","buttonLoader","setButtonLoader","onFinish","value","httpProvider","postAction","then","res","status","accessToken","data","storageEngine","set","catch","err","src","LoginImage","name","rules","required","message","noStyle","placeholder","type","loading","style","marginTop","htmlType","authenticated","authenticating","setAuthenticating","useEffect","get","protectedHttpProvider","size","spinning","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","val","localStorage","setItem","JSON","stringify","convertToJson","item","getItem","returnValue","parse","unset","Array","isArray","forEach","k","removeItem","deepClone","input","toFormData","formData","FormData","append","getHeader","headers","Authorization","url","payload","axios","post","getAction"],"mappings":"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","file":"static/js/main.6c952f7a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login.9a76e74e.svg\";","import React from \"react\";\r\nimport { Spin } from \"antd\";\r\nimport \"./style.scss\";\r\n\r\nexport default function () {\r\n    return (\r\n        <div className=\"example\">\r\n            <Spin />\r\n        </div>\r\n    );\r\n}\r\n","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Loader from \"../loader/ant-loader\";\r\n\r\nconst Category = lazy(() => import(\"../../components/category\"));\r\nconst Products = lazy(() => import(\"../../components/products\"));\r\nconst Location = lazy(() => import(\"./../../components/location\"));\r\nconst Orders = lazy(() => import(\"./../../components/orders\"));\r\n\r\nconst AppRoute = () => {\r\n    return (\r\n        <Suspense fallback={<Loader />}>\r\n            <Switch>\r\n                <Route exact path=\"/\" to=\"/orders\" component={Orders} />\r\n                <Route exact path=\"/category\" component={Category} />\r\n                <Route exact path=\"/products/:id\" component={Products} />\r\n                <Route exact path=\"/location\" component={Location} />\r\n            </Switch>\r\n        </Suspense>\r\n    );\r\n};\r\n\r\nexport default AppRoute;\r\n","import React, { useCallback } from \"react\";\r\nimport { Menu } from \"antd\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"./menu-styles.scss\";\r\n\r\nexport default withRouter(function (props) {\r\n    const { history, location } = props;\r\n    const getSelectedMenu = useCallback((pathName) => {\r\n        const paths = pathName.split(\"/\");\r\n        const path = paths.filter((a) => a !== \"\").length\r\n            ? paths.filter((a) => a !== \"\")[0]\r\n            : null;\r\n        // eslint-disable-next-line default-case\r\n        switch (path) {\r\n            case \"orders\":\r\n                return [\"1\"];\r\n            case \"category\":\r\n                return [\"2\"];\r\n            case \"location\":\r\n                return [\"3\"];\r\n        }\r\n    }, []);\r\n    return (\r\n        <>\r\n            <Menu\r\n                className=\"menu\"\r\n                theme=\"white\"\r\n                selectedKeys={getSelectedMenu(location.pathname)}\r\n                mode=\"horizontal\"\r\n            >\r\n                <Menu.Item key=\"1\" onClick={() => history.push(\"/\")}>\r\n                    Orders\r\n                </Menu.Item>\r\n                <Menu.Item key=\"2\" onClick={() => history.push(\"/category\")}>\r\n                    Category\r\n                </Menu.Item>\r\n                <Menu.Item key=\"3\" onClick={() => history.push(\"/location\")}>\r\n                    Location\r\n                </Menu.Item>\r\n                <Menu.Item key=\"4\">Completed Orders</Menu.Item>\r\n                <Menu.Item key=\"5\">Users</Menu.Item>\r\n            </Menu>\r\n        </>\r\n    );\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { Form, Input, Button, Alert, notification } from \"antd\";\r\nimport { storageEngine } from \"../../../common/helper/commonMethods\";\r\nimport { httpProvider } from \"../../../common/http\";\r\nimport axios from \"axios\";\r\nimport LoginImage from \"../../../images/login.svg\";\r\nimport \"./login.scss\";\r\n\r\nexport default function ({ setAuthenticated }) {\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [buttonLoader, setButtonLoader] = useState(false);\r\n    const checkLogin = (value) => {\r\n        setButtonLoader(true);\r\n        setShowAlert(false);\r\n        httpProvider\r\n            .postAction(\"api/v1/admin/login\", {\r\n                ...value,\r\n            })\r\n            .then((res) => {\r\n                if (res.status !== 200) {\r\n                    setShowAlert(true);\r\n                    setButtonLoader(false);\r\n                } else {\r\n                    const { accessToken } = res.data;\r\n                    storageEngine.set(\"accessToken\", accessToken);\r\n                    setButtonLoader(false);\r\n                    setAuthenticated(true);\r\n                    setShowAlert(false);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setButtonLoader(false);\r\n                setShowAlert(true);\r\n            });\r\n        // if (\r\n        //     value.username === \"ajishvnair55@gmail.com\" &&\r\n        //     value.password === \"aaa\"\r\n        // ) {\r\n        //     setAuthenticated(true);\r\n        //     setShowAlert(false);\r\n        // } else {\r\n        //     setShowAlert(true);\r\n        // }\r\n    };\r\n    return (\r\n        <div className=\"base-container\">\r\n            <div className=\"header\">Login</div>\r\n            <Form onFinish={checkLogin}>\r\n                <div className=\"content\">\r\n                    <div className=\"image\">\r\n                        <img src={LoginImage} />\r\n                    </div>\r\n                    <div className=\"form\">\r\n                        <div className=\"form-group\">\r\n                            <Form.Item\r\n                                name=\"username\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: \"Username is required\",\r\n                                    },\r\n                                ]}\r\n                                noStyle\r\n                            >\r\n                                <Input placeholder=\"Username\" />\r\n                            </Form.Item>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <Form.Item\r\n                                name=\"password\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: \"Password is required\",\r\n                                    },\r\n                                ]}\r\n                                noStyle\r\n                            >\r\n                                <Input type=\"password\" placeholder=\"Password\" />\r\n                            </Form.Item>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {showAlert && (\r\n                    <Alert type=\"error\" message=\"Invalid credential\" />\r\n                )}\r\n                <div className=\"footer\">\r\n                    <Button\r\n                        loading={buttonLoader}\r\n                        type=\"primary\"\r\n                        style={{ marginTop: \"5px\" }}\r\n                        className=\"btn\"\r\n                        htmlType=\"submit\"\r\n                    >\r\n                        Login\r\n                    </Button>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\nimport { Spin } from \"antd\";\nimport { withRouter } from \"react-router-dom\";\nimport { storageEngine } from \"./common/helper/commonMethods\";\nimport { protectedHttpProvider } from \"./common/http\";\nimport AppRoute from \"./common/route/AppRoute\";\nimport Header from \"./components/template/header\";\nimport Login from \"./components/authentication/login\";\n\nimport \"./App.css\";\nimport \"./App.scss\";\nimport \"antd/dist/antd.css\";\nimport \"./styles/index.scss\";\n\nfunction App() {\n    const [authenticated, setAuthenticated] = useState(false);\n    const [authenticating, setAuthenticating] = useState(true);\n\n    useEffect(() => {\n        const token = storageEngine.get(\"accessToken\");\n        // const headers = {\n        //     Authorization: token,\n        // };\n        if (token) {\n            protectedHttpProvider\n                .postAction(\"/api/v1/admin/auth\", {})\n                .then((res) => {\n                    if (res.status !== 200) {\n                        setAuthenticating(false);\n                    } else {\n                        setAuthenticated(true);\n                        setAuthenticating(false);\n                    }\n                })\n                .catch((err) => {\n                    setAuthenticating(false);\n                });\n        } else {\n            setAuthenticating(false);\n        }\n    }, []);\n\n    return (\n        <Spin size=\"large\" spinning={authenticating}>\n            <div className=\"app-container\">\n                {authenticated ? (\n                    <>\n                        <Header />\n                        <AppRoute />\n                    </>\n                ) : (\n                    !authenticating && (\n                        <div className=\"App\">\n                            <div className=\"login\">\n                                <div className=\"container\">\n                                    <Login\n                                        setAuthenticated={setAuthenticated}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    )\n                )}\n            </div>\n        </Spin>\n    );\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const storageEngine = {\r\n    // TODO: whether to need null check\r\n    set(key, val) {\r\n        localStorage.setItem(key, JSON.stringify(val));\r\n    },\r\n    get(key, convertToJson = true) {\r\n        const item = localStorage.getItem(key);\r\n        let returnValue = item;\r\n        if (convertToJson) {\r\n            try {\r\n                returnValue = JSON.parse(item);\r\n            } catch (error) {}\r\n        }\r\n        return returnValue;\r\n    },\r\n    unset(key) {\r\n        if (!Array.isArray(key)) key = [key];\r\n        key.forEach((k) => {\r\n            localStorage.removeItem(k);\r\n        });\r\n    },\r\n};\r\n\r\nexport const debounce = (fn, delay) => {\r\n    let timerId;\r\n    return (...args) => {\r\n        if (timerId) {\r\n            clearTimeout(timerId);\r\n        }\r\n        timerId = setTimeout(() => {\r\n            fn(...args);\r\n            timerId = null;\r\n        }, delay);\r\n    };\r\n};\r\n\r\nexport const uuId = (length = 10) => {\r\n    let result = \"\";\r\n    const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\r\n    const charactersLength = characters.length;\r\n    for (let i = 0; i < length; i++) {\r\n        result += characters.charAt(\r\n            Math.floor(Math.random() * charactersLength)\r\n        );\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const isEmpty = (a) => (a ? Object.keys(a || {}).length === 0 : true);\r\n\r\nexport const deepClone = (input) => JSON.parse(JSON.stringify(input || {}));\r\n\r\nexport const createUUID = () =>\r\n    // Math.random should be unique because of its seeding algorithm.\r\n    // Convert it to base 36 (numbers + letters), and grab the first 9 characters\r\n    // after the decimal.\r\n    `_${Math.random().toString(36).substr(2, 9)}`;\r\n\r\nexport const toFormData = (data) => {\r\n    const formData = new FormData();\r\n    for (let key in data) {\r\n        formData.append(key, data[key]);\r\n    }\r\n    return formData;\r\n};\r\n","import axios from \"axios\";\r\nimport { LOCALHOST } from \"../../environments/Environments\";\r\nimport { storageEngine } from \"../helper/commonMethods\";\r\n\r\nconst getBaseUrl = (url) => url;\r\n\r\nconst getHeader = () => {\r\n    const token = storageEngine.get(\"accessToken\");\r\n\r\n    const headers = {\r\n        Authorization: token,\r\n    };\r\n    return { headers };\r\n};\r\n\r\nexport const httpProvider = {\r\n    postAction: (url, payload) =>\r\n        axios.post(getBaseUrl(url), payload, getHeader()).catch((err) => {}),\r\n    getAction: (url) =>\r\n        axios.get(getBaseUrl(url), getHeader()).catch((err) => {}),\r\n};\r\n\r\nexport const protectedHttpProvider = {\r\n    postAction: (url, payload) =>\r\n        axios.post(getBaseUrl(url), payload, getHeader()).catch((err) => {}),\r\n    getAction: (url, payload) =>\r\n        axios.post(getBaseUrl(url), payload, getHeader()).catch((err) => {}),\r\n};\r\n"],"sourceRoot":""}